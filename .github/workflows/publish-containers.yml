name: Publish

on:
  push:
    tags:
      - '*'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Outputs the name of the repository (owner/repo)
      - name: Build Image Name
        id: image
        run: |
          # The name of the owner and of the repository: owner/repository
          IMAGE_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
          echo ::set-output name=image_name::${IMAGE_NAME}

      # Outputs container tags for tagged pushes starting by 'v'
      # Pushes only to GitHub Container Repository (ghcr.io)
      #
      # Tags stable versions as :latest
      # Pre-releases, alphas, etc. as :snapshot
      - name: Prepare Image Tags from Git Tag
        id: tagged
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          # Remove everything else than the tagged version
          VERSION=${GITHUB_REF#refs/tags/}

          # Tag as stable (:latest) if there is no letters in the version
          # Otherwise, tag as preview (:snapshot)
          if [[ $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            # Matches 1.0.0, 1.0.1, etc.
            NAMED_VERSION="latest"
          else
            # Matches 1.0.0a1, 1.0.0rc1, etc.
            NAMED_VERSION="snapshot"
          fi

          TAGS=$"\
          ghcr.io/${{ steps.image.outputs.image_name }}:${NAMED_VERSION},\
          ghcr.io/${{ steps.image.outputs.image_name }}:${VERSION}\
          "

          # Output the target tags
          echo "
          CONTAINER_TAGS=${TAGS}
          NAMED_VERSION=${NAMED_VERSION}" >> "${GITHUB_ENV}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./
          platforms: linux/amd64
          push: true
          tags: ${{ env.CONTAINER_TAGS }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            VERSION=${{ env.NAMED_VERSION }}
            COMMIT_ID=${{ github.sha }}

      - name: Image digest
        run: |
          echo $"\
            Digest: ${{ steps.docker_build.outputs.digest }}
            Tags: ${{ env.CONTAINER_TAGS }}"
